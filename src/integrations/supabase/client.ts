// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Enhanced error handling for missing environment variables
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('Missing Supabase environment variables:');
  console.error('VITE_SUPABASE_URL:', SUPABASE_URL ? '✓ Set' : '✗ Missing');
  console.error('VITE_SUPABASE_ANON_KEY:', SUPABASE_PUBLISHABLE_KEY ? '✓ Set' : '✗ Missing');
  console.error('Please check your .env file and ensure both variables are properly configured.');
  
  // Don't throw error immediately, allow graceful degradation
  console.warn('Continuing with fallback configuration...');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create client with enhanced error handling
export const supabase = createClient<Database>(
  SUPABASE_URL || 'http://localhost:54321', 
  SUPABASE_PUBLISHABLE_KEY || 'fallback_key', 
  {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      flowType: 'pkce'
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
      },
    }
  }
);

// Test connection on import
if (SUPABASE_URL && SUPABASE_PUBLISHABLE_KEY) {
  // Test connection asynchronously
  supabase.from('profiles').select('count').limit(1)
    .then(({ error }) => {
      if (error) {
        console.error('Supabase connection test failed:', error);
      } else {
        console.log('✓ Supabase connection successful');
      }
    })
    .catch((error) => {
      console.error('Supabase connection error:', error);
    });
}